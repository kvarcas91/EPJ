<UserControl x:Class="EPJ.Views.ProjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EPJ"
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:StyleAlias="clr-namespace:EPJ.Utilities"
             d:DesignHeight="700" d:DesignWidth="800"
             xmlns:dragDrop="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="StyleAlias:Priority"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        
        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
        <local:ImageConverter x:Key="imageConverter"/>
        <local:DateToStringConverter x:Key="dateConverter"/>
        <local:BoolToTextDecorationConverter x:Key="textDecorationConverter"/>
        <local:BoolToTaskBackgroundConverter x:Key="backgroundConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220" MinWidth="220" MaxWidth="500"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*" MinWidth="400"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="200" MinWidth="200" MaxWidth="500"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.ColumnSpan="5"
              Background="{Binding Priority, Converter= {StaticResource priorityColorConverter}, Mode=OneWay}">
            <StackPanel Orientation="Horizontal" 
                    Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
                <Button x:Name="BackToProjectList" 
                Grid.Column="0" Grid.Row="0"
                Width="60" ToolTip="Back to project list"
                HorizontalAlignment="Left">
                    <materialDesign:PackIcon Kind="ArrowBackCircle" Height="24" Width="24"/>
                </Button>

            </StackPanel>

            <StackPanel Grid.Column="2" Grid.ColumnSpan="3" Margin="0 0 10 0"
                    HorizontalAlignment="Right" Orientation="Horizontal">
                <ComboBox SelectedIndex="{Binding Priority}" x:Name="dueCombo"
                                  MinWidth="100" FontSize="12"
                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                         SelectedItem="{Binding Path=Priority, Mode=TwoWay}"
                          Foreground="White" HorizontalContentAlignment="Center"
                          FontWeight="Bold">

                </ComboBox>
            </StackPanel>
        </Grid>
        
       


        <!-- File -->
        <Grid Grid.Row="1" Grid.Column="0" Background="White"
              Margin="10"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <StackPanel Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                       Margin="10">
                <TextBlock Text="Files" FontSize="16" FontWeight="Bold" Margin="10"/>
                <Separator/>
            </StackPanel>


            <!-- File Navigation and folder creation -->
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button x:Name="NavigateFolderBack" Background="Transparent" 
                        BorderThickness="0" ToolTip="Navigate back">
                    <materialDesign:PackIcon Kind="ArrowBackCircle"
                                             Foreground="#2196F3"
                                             Width="24" Height="24"/>
                </Button>


                <Button x:Name="ShowProjectDirectory" Background="Transparent" 
                        BorderThickness="0" ToolTip="Project home directory">
                    <materialDesign:PackIcon Kind="HomeOutline"
                                             Foreground="#2196F3"
                                             Width="24" Height="24"/>
                </Button>

                <Button x:Name="ShowAddFolderPanel" Background="Transparent" 
                        BorderThickness="0"  ToolTip="Create new folder">
                    <materialDesign:PackIcon Kind="FolderAddOutline"
                                             Foreground="#2196F3"
                                             Width="24" Height="24"/>
                </Button>
            </StackPanel>

            <Grid Grid.Row="2"
                Visibility="{Binding IsAddFilePanelVisible, Mode=TwoWay, 
                Converter={StaticResource boolToVisibility}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBox x:Name="NewFolderName"
                           materialDesign:HintAssist.Hint="Folder Name"
                                  Margin="5" Grid.Row="0" FontSize="12"
                                  materialDesign:HintAssist.IsFloating="True"/>

                <Button x:Name="AddNewFolder"
                            Grid.Row="2" Content="Add" HorizontalAlignment="Center"
                                Margin="5"/>
            </Grid>

            <!-- Drop File View -->
            <Grid x:Name="DropFileView" Grid.Row="2" Grid.RowSpan="2"
                        Background="#2196F3"
                  VerticalAlignment="Stretch"
                  AllowDrop="True"
                      dragDrop:DragDrop.IsDropTarget="True"
                      dragDrop:DragDrop.DropHandler="{Binding}"
                  Visibility="{Binding IsDropping, Converter={StaticResource boolToVisibility}}"
                        Margin="0 10 0 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="17*"/>
                </Grid.ColumnDefinitions>

                <StackPanel Orientation="Vertical" VerticalAlignment="Center" Grid.ColumnSpan="2" Margin="0,215,0,214.6">
                    <materialDesign:PackIcon Kind="Cloud" Foreground="White"
                                         VerticalAlignment="Center"
                                             Width="80" Height="80"
                                         HorizontalAlignment="Center"/>

                    <TextBlock Grid.Row="2" Grid.RowSpan="2"
                           FontSize="22" TextAlignment="Center"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Stretch"
                               Foreground="White"
                       Text="Drop Files Here"/>
                </StackPanel>


            </Grid>

            <!-- FileList -->
            <ListView Grid.Row="3" x:Name="FileListView" 
                      ItemsSource="{Binding RelatedFiles}"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      AllowDrop="True"
                      dragDrop:DragDrop.IsDropTarget="True"
                      dragDrop:DragDrop.DropHandler="{Binding}"
                      Margin="0 10 0 0"
                      Visibility="{Binding IsFileListVisible, Converter={StaticResource boolToVisibility}}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <materialDesign:Card VerticalAlignment="Top" 
                                             Background="Transparent">

                            <materialDesign:Card.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick" 
                                              Command="{Binding ElementName=FileListView,Path=DataContext.FileListItemClickCommand}"
                                              CommandParameter="{Binding}"/>
                            </materialDesign:Card.InputBindings>

                            <StackPanel Orientation="Vertical" VerticalAlignment="Top">


                                <Image Width="24" Height="24"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Top"
                                       Source="{Binding FileIcon, 
                                    Converter={StaticResource imageConverter}}"/>

                                <TextBlock FontSize="12" 
                                           Width="80"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap"
                                           Text="{Binding FileName}"/>

                            </StackPanel>
                        </materialDesign:Card>

                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
            </ListView>



        </Grid>

        <GridSplitter Grid.Row="1" Grid.Column="1"
                      Width="5" HorizontalAlignment="Stretch" />

        <!-- Project info -->
        <materialDesign:Card  Grid.Row="1" Grid.Column="2" 
                              Background="White" Margin="10"
                               HorizontalAlignment="Stretch" 
                              VerticalAlignment="Stretch">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Project Title and submition date -->

                <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                      Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="ProjectTitle" FontSize="20" 
                         Grid.Row="0" Grid.Column="0"
                             Text="Project" FontWeight="Bold" TextWrapping="Wrap"
                             BorderThickness="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding Path=TitleLostFocusCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding TitleLostFocusCommand}" Key="Return" />
                            <KeyBinding Command="{Binding TitleLostFocusCommand}" Key="Enter" />
                        </TextBox.InputBindings>
                    </TextBox>

                   

                    <TextBlock x:Name="SubmitionDate" Text="{Binding SubmitionDate}"
                               Grid.Row="1"
                               Margin="20 0 0 10"/>

                    <Separator Background="#2196F3"
                               Grid.Row="2" Grid.ColumnSpan="3"/>


                    <!-- Project deadline -->
                    <StackPanel Grid.Row="0" Grid.Column="2"
                                Grid.RowSpan="2" Margin="10"
                            Orientation="Vertical" 
                            VerticalAlignment="Center">
                        <TextBlock Text="DueTo" HorizontalAlignment="Center"/>
                        <DatePicker x:Name="DueDate"/>
                    </StackPanel>
                </Grid>

             
              

                <!-- Project information -->
                <StackPanel Orientation="Vertical"  Margin="10"
                            Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">

                    <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0"
                           Grid.ColumnSpan="2">

                        <TextBox x:Name="Description" Margin="0 10 0 0"
                     MinWidth="280" BorderThickness="0" FontSize="14"
                     TextWrapping="Wrap" TextAlignment="Justify"
                     materialDesign:HintAssist.Hint="Description"  
                     materialDesign:HintAssist.IsFloating="True"
                     VerticalScrollBarVisibility="Auto" SpellCheck.IsEnabled="True"
                     VerticalContentAlignment="Top">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="LostFocus">
                                    <i:InvokeCommandAction Command="{Binding Path=DescriptionLostFocusCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <TextBox.InputBindings>
                                <KeyBinding Command="{Binding DescriptionLostFocusCommand}" Key="Return" />
                                <KeyBinding Command="{Binding DescriptionLostFocusCommand}" Key="Enter" />
                            </TextBox.InputBindings>
                        </TextBox>

                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0"
                            Grid.ColumnSpan="2">
                        <TextBlock x:Name="Tasks" 
                           FontSize="20" Text="Tasks" FontWeight="Bold" Margin="10"/>
                        <Button x:Name="ShowAddTaskPanel" Background="Transparent"
                                BorderThickness="0" ToolTip="Add new task">
                            <materialDesign:PackIcon Kind="AddCircleOutline" Foreground="Black"
                                                     Width="20" Height="20"/>
                        </Button>
                    </StackPanel>

                    <Separator Background="#2196F3"/>

                    <Border BorderThickness="2" BorderBrush="#2196F3"
                             Visibility="{Binding IsAddTaskPanelVisible, Mode=TwoWay,Converter={StaticResource boolToVisibility}}">
                        <StackPanel Orientation="Vertical" Margin="10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Button HorizontalAlignment="Right" Grid.Row="0" Margin="0 -10 -10 10"
                                        Background="Transparent" BorderThickness="0"
                                        Command="{Binding CloseAddTaskPanelCommand}">
                                    <materialDesign:PackIcon Kind="Close" Foreground="Black"/>
                                </Button>
                                <TextBox x:Name="TaskContent" FontSize="12" Grid.Row="1"
                            materialDesign:HintAssist.Hint="Task" TextWrapping="Wrap"
                            materialDesign:HintAssist.IsFloating="True"/>
                               
                            </Grid>
                           
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Priority  " Margin="10" VerticalAlignment="Center"/>
                                <ComboBox SelectedIndex="1" Margin=" 10"
                                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                                  MinWidth="100" FontSize="12"
                         SelectedItem="{Binding Path=TaskPriority, Mode=TwoWay}"/>
                                <TextBlock Text="  DueTo  " VerticalAlignment="Center"/>
                                <DatePicker x:Name="TaskDueDate" />
                            </StackPanel>
                            <Button x:Name="SaveTask" Content="Save" Margin="10"/>
                        </StackPanel>
                    </Border>

                </StackPanel>

                <!-- Task list -->
                <ListView x:Name="projectTaskList"
                    ItemsSource="{Binding ProjectTasks}" Style="{StaticResource ListView}"
                          HorizontalContentAlignment="Stretch"
                          Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <materialDesign:Card 
                               Background="{Binding IsCompleted, Converter={StaticResource backgroundConverter}}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Priority -->
                                    <TextBlock Style="{StaticResource Priority}"
                                               Grid.Row="0"
                                         Background="{Binding Priority, Converter={StaticResource priorityColorConverter}}">
                                         <ItemsControl 
                                         ItemsSource="{Binding Priority, Converter={StaticResource priorityToStringConverter}}"/>
                                    </TextBlock>
                                    
                                    <!-- description -->
                                    <CheckBox Grid.Column="1" Grid.Row="0" x:Name="IsCompleted"
                                              IsChecked="{Binding IsCompleted}"
                                               Command="{Binding ElementName=projectTaskList, Path= DataContext.IsTaskCompletedCommand}"
                                          CommandParameter="{Binding}">

                                        <TextBlock Text="{Binding Content}" 
                                                   TextAlignment="Justify" TextWrapping="Wrap"
                                                    TextDecorations="{Binding IsCompleted, Converter={StaticResource textDecorationConverter}}"/>
                                    </CheckBox>
                                    
                                    <!-- Deadline -->
                                    <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center" Margin="10 0 10 0">
                                        <TextBlock Text="DueTo" HorizontalAlignment="Center"/>
                                        <TextBlock Text="{Binding DueDate, Converter={StaticResource dateConverter}}" 
                                                   HorizontalAlignment="Center"/>
                                    </StackPanel>
                                    
                                    <!-- Settings -->
                                    <Grid Grid.Column="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListViewItem}},Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        
                                        <Button Grid.Row="0" Background="Transparent" BorderThickness="0"
                                                Command="{Binding ElementName=projectTaskList, Path=DataContext.EditTaskCommand}"
                                                CommandParameter="{Binding}">
                                            <materialDesign:PackIcon Kind="Edit" Foreground="Black"
                                                     Width="16" Height="16"/>
                                        </Button>

                                        <Button Grid.Row="1" Background="Transparent" BorderThickness="0">
                                            <materialDesign:PackIcon Kind="Delete" Foreground="Black"
                                                     Width="20" Height="20"/>
                                        </Button>
                                    </Grid>
                                   
                                </Grid>
                            </materialDesign:Card>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

            </Grid>

        </materialDesign:Card>

        <GridSplitter Grid.Row="1" Grid.Column="3"
                      Width="5" HorizontalAlignment="Stretch" />

        <!-- Comments -->
        <Grid Grid.Row="1" Grid.Column="4" Background="White"
              Margin="10">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <StackPanel Grid.Row="0" Grid.Column="0" 
                       Margin="10">
                <TextBlock Text="Comments" FontSize="16" FontWeight="Bold" Margin="10"/>
                <Separator/>
            </StackPanel>

            
            <!-- Add Note panel -->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Button x:Name="ShowAddNotePanel" Grid.Row="0"
                    Content="Add Comment"/>

                <Grid Grid.Row="1" Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBox materialDesign:HintAssist.Hint="Comment"
                           materialDesign:HintAssist.IsFloating="True"
                               TextWrapping="Wrap" TextAlignment="Justify"/>

                    <Button x:Name="AddComment" Grid.Row="1" Margin="10">
                        <materialDesign:PackIcon Kind="AddCircleOutline"
                                                 Width="24" Height="24"/>
                    </Button>
                </Grid>
            </Grid>

            <ListView x:Name="noteListView" ItemsSource="{Binding Notes}"
                      Grid.Row="2">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Content}"/>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
            
        </Grid>

        
        <!-- Progress -->
        <Grid Grid.Row="2" Grid.ColumnSpan="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Progress text -->
            <TextBlock 
                Text="{Binding Progress, StringFormat=' {0}%'}" 
                       Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <!-- Progress bar -->
            <ProgressBar Value="{Binding Progress}" Grid.Row="1"
                         Background="#F2F2F2" BorderThickness="0">
                <ProgressBar.Foreground>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0.0, 0">
                        <GradientStop Color="#90caf9" Offset="0"/>
                        <GradientStop Color="#1565c0" Offset="1"/>
                    </LinearGradientBrush>
                </ProgressBar.Foreground>
            </ProgressBar>

           
        </Grid>

    </Grid>
</UserControl>
