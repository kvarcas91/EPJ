<UserControl x:Class="EPJ.Views.ProjectView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:EPJ"
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:StyleAlias="clr-namespace:EPJ.Utilities"
             d:DesignHeight="700" d:DesignWidth="800"
             xmlns:utils="clr-namespace:EPJ.Utilities"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <UserControl.Resources>
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues"
                            ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="StyleAlias:Priority"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <BooleanToVisibilityConverter x:Key="boolToVisibility"/>
        <local:ImageConverter x:Key="imageConverter"/>
        <local:DateToStringConverter x:Key="dateConverter"/>
        <local:BoolToTextDecorationConverter x:Key="textDecorationConverter"/>
        <local:BoolToTaskBackgroundConverter x:Key="backgroundConverter"/>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220" MinWidth="220" MaxWidth="500"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="*" MinWidth="400"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="200" MinWidth="200" MaxWidth="500"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Grid.ColumnSpan="5"
              Background="{Binding Priority, Converter= {StaticResource priorityColorConverter}, Mode=OneWay}">
            <StackPanel Orientation="Horizontal" 
                    Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left">
                <Button x:Name="BackToProjectList" 
                Grid.Column="0" Grid.Row="0"
                Width="60" ToolTip="Back to project list"
                HorizontalAlignment="Left">
                    <materialDesign:PackIcon Kind="ArrowBackCircle" Height="24" Width="24"/>
                </Button>

            </StackPanel>

            <StackPanel Grid.Column="2" Grid.ColumnSpan="3" 
                    HorizontalAlignment="Right" Orientation="Horizontal">
                <ComboBox SelectedIndex="{Binding Priority}" x:Name="dueCombo"
                                  MinWidth="100" FontSize="12"
                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                         SelectedItem="{Binding Path=Priority, Mode=TwoWay}"
                          Foreground="White" HorizontalContentAlignment="Center"
                          FontWeight="Bold">

                </ComboBox>
                <Button x:Name="Archive" Background="Transparent"
                        BorderThickness="0" ToolTip="{Binding ArchiveString}">
                    <materialDesign:PackIcon Kind="Archive" Foreground="White"/>
                </Button>
            </StackPanel>
        </Grid>
        
       


        <!-- File -->
        <Grid Grid.Row="1" Grid.Column="0" Background="White"
              Margin="10"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              >

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>


            <StackPanel Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"
                       Margin="10">
                <TextBlock Text="Files" FontSize="16" FontWeight="Bold" Margin="10"/>
                <Separator/>
            </StackPanel>


            <!-- File Navigation and folder creation -->
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button x:Name="NavigateFolderBack" Background="Transparent" 
                        BorderThickness="0" ToolTip="Navigate back">
                    <materialDesign:PackIcon Kind="ArrowBackCircle"
                                             Foreground="#2196F3"
                                             Width="24" Height="24"/>
                </Button>


                <Button x:Name="ShowProjectDirectory" Background="Transparent" 
                        BorderThickness="0" ToolTip="Project home directory">
                    <materialDesign:PackIcon Kind="HomeOutline"
                                             Foreground="#2196F3"
                                             Width="24" Height="24"/>
                </Button>

                <Button x:Name="ShowAddFolderPanel" Background="Transparent" 
                        BorderThickness="0"  ToolTip="Create new folder">
                    <materialDesign:PackIcon Kind="FolderAddOutline"
                                             Foreground="#2196F3"
                                             Width="24" Height="24"/>
                </Button>
            </StackPanel>

            <TextBlock Grid.Row="2" Text="{Binding CurrentPath}"
                       FontSize="10" ToolTip="{Binding CurrentPath}"/>

            <Grid Grid.Row="3"
                Visibility="{Binding IsAddFilePanelVisible, Mode=TwoWay, 
                Converter={StaticResource boolToVisibility}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TextBox x:Name="NewFolderName"
                           materialDesign:HintAssist.Hint="Folder Name"
                                  Margin="5" Grid.Row="0" FontSize="12"
                                  materialDesign:HintAssist.IsFloating="True"/>

                <Button x:Name="AddNewFolder"
                            Grid.Row="2" Content="Submit" HorizontalAlignment="Center"
                                Margin="5"/>
            </Grid>

            <!-- FileList -->
            <ListView Grid.Row="4" x:Name="FileListView" 
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      Margin="0 10 0 0" 
                      AllowDrop="True"
                      VerticalAlignment="Stretch"
                      PreviewMouseLeftButtonDown="ListViewPreviewMouseLeftButtonDown"
                      MouseMove="FileListView_MouseMove"
                      DragEnter="FileListView_DragEnter"
                      Drop="FileListView_Drop"
                      ItemsSource="{Binding RelatedFiles}"
                      Visibility="{Binding IsFileListVisible, Converter={StaticResource boolToVisibility}}">
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <materialDesign:Card
                            VerticalAlignment="Top" 
                                             Background="Transparent"
                                             Tag="{Binding RelativeSource={RelativeSource 
                                                        Mode=FindAncestor, 
                                                        AncestorType={x:Type UserControl}}}">

                            <materialDesign:Card.InputBindings>
                                <MouseBinding Gesture="LeftDoubleClick" 
                                              Command="{Binding ElementName=FileListView,Path=DataContext.FileListItemClickCommand}"
                                              CommandParameter="{Binding}"/>
                            </materialDesign:Card.InputBindings>
                            <materialDesign:Card.ContextMenu>
                                <ContextMenu>
                                    <!-- Options -->

                                    <MenuItem Header="Edit" Command="{
                                                    Binding Path=PlacementTarget.Tag.DataContext.EditFileCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding}"/>
                                    <MenuItem Header="Delete" Command="{
                                                    Binding Path=PlacementTarget.Tag.DataContext.DeleteFileCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding}"/>
                                    <Separator/>
                                    <MenuItem Header="Show in explorer" Command="{
                                                    Binding Path=PlacementTarget.Tag.DataContext.ShowInExplorerCommand,
                                                    RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                    CommandParameter="{Binding}"/>
                                </ContextMenu>
                            </materialDesign:Card.ContextMenu>

                            <StackPanel Orientation="Vertical" VerticalAlignment="Top">


                                <Image Width="24" Height="24"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Top"
                                       Source="{Binding Icon, 
                                    Converter={StaticResource imageConverter}}"/>


                                <TextBox x:Name="fileName"
                                    FontSize="12" 
                                           Width="80"
                                           BorderThickness="0"
                                           TextAlignment="Center"
                                           TextWrapping="Wrap"
                                         Cursor="Arrow"
                                         Focusable="False"
                                         Background="Transparent"
                                           Text="{Binding Name, Mode=TwoWay}">
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Foreground" Value="Black"/>
                                        </Style>
                                    </TextBox.Style>

                                </TextBox>

                            </StackPanel>
                        </materialDesign:Card>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                
            </ListView>

        </Grid>

        <GridSplitter Grid.Row="1" Grid.Column="1"
                      Width="5" HorizontalAlignment="Stretch" />

        <!-- Project info -->
        <materialDesign:Card  Visibility="{Binding IsProjectVisible, Converter={StaticResource boolToVisibility}}"
            Grid.Row="1" Grid.Column="2" 
                              Background="White" Margin="10"
                               HorizontalAlignment="Stretch" 
                              VerticalAlignment="Stretch">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Project Title and submition date -->

                <Grid Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"
                      Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox x:Name="ProjectTitle" FontSize="20" 
                         Grid.Row="0" Grid.Column="0"
                             Text="Project" FontWeight="Bold" TextWrapping="Wrap"
                             BorderThickness="0">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding Path=TitleLostFocusCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding TitleLostFocusCommand}" Key="Return" />
                            <KeyBinding Command="{Binding TitleLostFocusCommand}" Key="Enter" />
                        </TextBox.InputBindings>
                    </TextBox>



                    <TextBlock x:Name="SubmitionDate" Text="{Binding SubmitionDate}"
                               Grid.Row="1"
                               Margin="20 0 0 0"/>
                    
                    <!-- Project deadline -->
                    <StackPanel Grid.Row="0" Grid.Column="2"
                                Grid.RowSpan="2" Margin="10 10 10 0"
                            Orientation="Vertical" 
                            VerticalAlignment="Center">
                        <TextBlock Text="DueTo" HorizontalAlignment="Center"/>
                        <DatePicker x:Name="DueDate"/>
                    </StackPanel>
                </Grid>

             
              

                <!-- Project information -->
                <StackPanel Orientation="Vertical"  Margin="10"
                            Visibility="{Binding IsProjectInfoPanelVisible, Converter={StaticResource boolToVisibility}}"
                            Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">

                    <TextBox x:Name="Description" MaxHeight="200"
                     MinWidth="280" BorderThickness="0" FontSize="14"
                     TextWrapping="Wrap" TextAlignment="Justify"
                     materialDesign:HintAssist.Hint="Description"  
                     materialDesign:HintAssist.IsFloating="True"
                                 
                     VerticalScrollBarVisibility="Auto" SpellCheck.IsEnabled="True"
                     VerticalContentAlignment="Top">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="LostFocus">
                                <i:InvokeCommandAction Command="{Binding Path=DescriptionLostFocusCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <TextBox.InputBindings>
                            <KeyBinding Command="{Binding DescriptionLostFocusCommand}" Key="Return" />
                            <KeyBinding Command="{Binding DescriptionLostFocusCommand}" Key="Enter" />
                        </TextBox.InputBindings>
                    </TextBox>

                    <Separator Background="#2196F3"/>

                </StackPanel>

                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
 
                        <TextBlock x:Name="Tasks" Grid.Column="0"
                           FontSize="20" Text="Tasks" FontWeight="Bold" Margin="10"/>
                        <Button x:Name="ShowAddTaskPanel" Background="Transparent"
                                Grid.Column="1"
                                BorderThickness="0" ToolTip="Add new task">
                            <materialDesign:PackIcon Kind="AddCircleOutline" Foreground="Black"
                                                     Width="20" Height="20"/>
                        </Button>
                    <Button x:Name="ExpandTaskPanel" Background="Transparent"
                            Grid.Column="2" HorizontalAlignment="Right"
                            BorderThickness="0" ToolTip="Expand Task View">
                        <materialDesign:PackIcon Kind="CircleExpand" Foreground="Black"
                                                 Width="20" Height="20"/>
                    </Button>

                    <!-- Add Task Panel -->
                    <Border BorderThickness="4" BorderBrush="{Binding TaskPriority, Converter={StaticResource priorityColorConverter}, Mode=TwoWay}"
                             Visibility="{Binding IsAddTaskPanelVisible, Mode=TwoWay,Converter={StaticResource boolToVisibility}}"
                            Grid.Row="1" Grid.ColumnSpan="3">
                        <StackPanel Orientation="Vertical" Margin="10">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Button HorizontalAlignment="Right" Grid.Row="0" Margin="0 -10 -10 10"
                                        Background="Transparent" BorderThickness="0"
                                        ToolTip="Close"
                                        Command="{Binding CloseAddTaskPanelCommand}">
                                    <materialDesign:PackIcon Kind="Close" Foreground="Black"/>
                                </Button>
                                <TextBox x:Name="TaskContent" FontSize="12" Grid.Row="1"
                            materialDesign:HintAssist.Hint="Task" TextWrapping="Wrap"
                            materialDesign:HintAssist.IsFloating="True"/>

                            </Grid>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Priority  " Margin="10" VerticalAlignment="Center"/>
                                <ComboBox SelectedIndex="1" Margin=" 10"
                                      ItemsSource="{Binding Source={StaticResource dataFromEnum}}"
                                  MinWidth="100" FontSize="12"
                         SelectedItem="{Binding Path=TaskPriority, Mode=TwoWay}"/>
                                <TextBlock Text="  DueTo  " VerticalAlignment="Center"/>
                                <DatePicker x:Name="TaskDueDate" />
                            </StackPanel>
                            <Button x:Name="SaveTask" Content="Submit" Margin="10"/>
                        </StackPanel>
                    </Border>
                </Grid>

                <!-- Task list -->
                <TreeView x:Name="projectTaskList"
                          Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                          ItemsSource="{Binding ProjectTasks}"
                          HorizontalContentAlignment="Stretch">

                    <TreeView.ItemTemplate>
                        <!-- Main Tasks -->
                        <HierarchicalDataTemplate ItemsSource="{Binding SubTasks}"
                                                  DataType="{x:Type local:Task}">
                            
                            <!-- Body -->
                            <materialDesign:Card Background="{Binding IsCompleted, 
                                                              Converter={StaticResource backgroundConverter}}">
                                
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <!-- Task information -->
                                        <RowDefinition Height="Auto"/>
                                        
                                        <!-- Task Contributors -->
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <Grid.ColumnDefinitions>
                                        <!-- Priority -->
                                        <ColumnDefinition Width="Auto"/>
                                        
                                        <!-- Task Content -->
                                        <ColumnDefinition Width="*"/>
                                        
                                        <!-- Task Deadline -->
                                        <ColumnDefinition Width="Auto"/>
                                        
                                        <!-- Task Controls -->
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Priority -->
                                    <TextBlock  Grid.Column="0"
                                                Style="{StaticResource Priority}"
                                                Background="{Binding Priority, Converter={StaticResource priorityColorConverter}}">
                                         <ItemsControl 
                                             ItemsSource="{Binding Priority, Converter={StaticResource priorityToStringConverter}}"/>
                                    </TextBlock>

                                    <!-- Task Description -->
                                    <CheckBox Grid.Row="0" Grid.Column="1"
                                              x:Name="IsCompleted"
                                              IsChecked="{Binding IsCompleted}"
                                              Command="{Binding ElementName=projectTaskList,
                                                        Path=DataContext.IsTaskCompletedCommand}"
                                              CommandParameter="{Binding}">
                                        <TextBlock Text="{Binding Content}"
                                                   TextAlignment="Justify"
                                                   TextWrapping="Wrap"
                                                   TextDecorations="{Binding IsCompleted,
                                                                     Converter={StaticResource textDecorationConverter}}"/>
                                    </CheckBox>

                                    <!-- Deadline -->
                                    <Grid Grid.Row="0" Grid.Column="2" Grid.RowSpan="2"
                                          VerticalAlignment="Center">
                                        
                                        <Grid.RowDefinitions>
                                            <!-- Due to -->
                                            <RowDefinition Height="Auto"/>
                                            
                                            <!-- Deadline -->
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <!-- Due to -->
                                        <TextBlock Grid.Row="0"
                                                   Text="Due To"
                                                   HorizontalAlignment="Center"/>
                                        
                                        <!-- Deadline -->
                                        <TextBlock Grid.Row="1"
                                                   Text="{Binding DueDate,
                                                          Converter={StaticResource dateConverter}}"
                                                   HorizontalAlignment="Center"/>
                                        
                                    </Grid>
                               
                                    <!-- Controls -->
                                    <Grid Grid.Column="3">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <!-- OnMouseOver visibility -->
                                        <Grid.Style>
                                            <Style TargetType="{x:Type Grid}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type TreeViewItem}},Path=IsMouseOver}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>

                                        <!-- Add -->
                                        <Button Grid.Row="0" 
                                                Style="{StaticResource ControlButton}"
                                                Command="{Binding ElementName=projectTaskList, 
                                                                  Path=DataContext.AddSubTaskCommand}"
                                                CommandParameter="{Binding}"
                                                ToolTip="Add sub-task">
                                            <materialDesign:PackIcon Kind="Add" 
                                                                     Foreground="Black"
                                                                     Width="16" Height="16"/>
                                        </Button>

                                        <!-- Edit -->
                                        <Button Grid.Row="1" 
                                                Style="{StaticResource ControlButton}"
                                                Command="{Binding ElementName=projectTaskList, 
                                                                  Path=DataContext.EditTaskCommand}"
                                                CommandParameter="{Binding}"
                                                ToolTip="Edit task">
                                            <materialDesign:PackIcon Kind="Edit" 
                                                                     Foreground="Black"
                                                                     Width="16" Height="16"/>
                                        </Button>

                                        <!-- Delete -->
                                        <Button Grid.Row="2" 
                                                Style="{StaticResource ControlButton}"
                                                Command="{Binding ElementName=projectTaskList, 
                                                          Path=DataContext.DeleteTaskCommand}"
                                                CommandParameter="{Binding}"
                                                ToolTip="Delete task">
                                            <materialDesign:PackIcon Kind="Delete" 
                                                                     Foreground="Black"
                                                                     Width="16" Height="16"/>
                                        </Button>

                                    </Grid>

                                </Grid>
                            </materialDesign:Card>
                            
                            
                            
                            <!-- SubTasks -->
                            <HierarchicalDataTemplate.ItemTemplate>
                                <HierarchicalDataTemplate>
                                    <Label Content="{Binding Content}"/>
                                </HierarchicalDataTemplate>
                            </HierarchicalDataTemplate.ItemTemplate>

                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    
                </TreeView>

            </Grid>

        </materialDesign:Card>

        <!-- Expanded CommentView -->
        <materialDesign:Card  Visibility="{Binding IsExpandedCommentVisible, Converter={StaticResource boolToVisibility}}"
            Grid.Row="1" Grid.Column="2" 
                              Background="White" Margin="10"
                               HorizontalAlignment="Stretch" 
                              VerticalAlignment="Stretch">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBlock  Text="{Binding PreviewCommentSubmitionDate, Converter={local:DateToStringConverter}}"
                               Grid.Row="0" FontSize="10" FontStyle="Italic"
                               Margin="20 0 0 0"
                            VerticalAlignment="Bottom"/>
                <Button x:Name="ExpandCommentView" Grid.Column="1"
                        HorizontalAlignment="Right"
                        Style="{StaticResource ExpandButton}">
                    <materialDesign:PackIcon Kind="CircleExpand"
                                             Width="24"
                                             Height="24"/>
                </Button>
                <Separator Background="#2196F3" Margin="10" Grid.Column="0"
                           Grid.Row=" 1" Grid.ColumnSpan="2" />

                <TextBox Grid.Row="2" Grid.ColumnSpan="2" TextWrapping="Wrap"
                         TextAlignment="Justify"
                         Text="{Binding PreviewCommentContent, Mode=TwoWay}"/>
                <Button x:Name="EditPreviewComment"
                    Grid.Row=" 3" Margin="10" Grid.Column="0" Grid.ColumnSpan="2"
                        Content="Commit"/>
            </Grid>
            
        </materialDesign:Card>

        <GridSplitter Grid.Row="1" Grid.Column="3"
                      Width="5" HorizontalAlignment="Stretch" />

       <!-- Contributors and Comments -->
        <Grid Grid.Row="1" Grid.Column="4" 
              Background="White"
              Margin="10">

            <Grid.RowDefinitions>
                <!-- Contributors row -->
                <RowDefinition Height="Auto"/>
                <!-- Comments row -->
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Contributors -->
            <Grid Grid.Row="0" Margin="10">
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <!-- Header and expandable button row -->
                    <RowDefinition Height="Auto"/>
                    <!-- Separator Row -->
                    <RowDefinition Height="Auto"/>
                    <!-- Body -->
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--  Header and expandable button -->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <!-- Header row -->
                        <ColumnDefinition Width="*"/>
                        <!-- Expandalbe button row -->
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Header -->
                    <TextBlock Text="Contributors" 
                               Grid.Column="0"
                               Style="{StaticResource Headers}"/>

                    <!-- Expandable button -->
                    <Button x:Name="ExpandContributorsPanel"
                            Grid.Column="1"
                            Style="{StaticResource ExpandButton}"
                            ToolTip="Expand Contributors View">
                        <materialDesign:PackIcon Kind="CircleExpand"/>
                    </Button>
                </Grid>

                <!-- Separates Header and body -->
                <Separator Grid.Row="1" 
                           Background="{StaticResource AccentBrush}"
                           Margin="0 5 0 5"/>

                <!-- Contributors Body -->
                <Grid Grid.Row="2"
                      Visibility="{Binding IsContributorPanelVisible,
                                           Converter={StaticResource boolToVisibility}}">

                    <Grid.RowDefinitions>
                        <!-- Show 'Add Contributor' button -->
                        <RowDefinition Height="Auto"/>
                        <!-- Body -->
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Show 'Add Contributor' Panel -->
                    <Button x:Name="ShowContributorList"
                            Grid.Row="0">
                        <materialDesign:PackIcon Kind="AddCircleOutline"
                                                 Width="24"
                                                 Height="24"/>
                    </Button>

                    <!-- All available Contributors Panel-->
                    <materialDesign:Card Grid.Row="1"
                                         Margin="5"
                                         Visibility="{Binding IsAddContributorPanelVisible,
                                                      Mode=TwoWay,
                                                      Converter={StaticResource boolToVisibility}}">
                        
                        <Grid>
                            <Grid.RowDefinitions>
                                <!-- Add New Contributor Button -->
                                <RowDefinition Height="Auto"/>
                                <!-- All Contributors list and Add New -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            
                            <!-- Add New Contributor Button-->
                            <Button x:Name="ShowAddNewContributorPanel"
                                    Grid.Row="0"
                                    Content="Add New"/>

                            <!-- Add New Panel -->
                            <Grid Grid.Row="1"
                                  Visibility="{Binding IsAddNewContributorPanelVisible,
                                               Mode=TwoWay,
                                               Converter={StaticResource boolToVisibility}}">

                                <Grid.RowDefinitions>
                                    <!-- FirstName -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- LastName -->
                                    <RowDefinition Height="Auto"/>
                                    <!-- Confirm -->
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- First Name -->
                                <TextBox x:Name="FirstName"
                                         Grid.Row="0"
                                         Margin="5"
                                         FontSize="12"
                                         materialDesign:HintAssist.Hint="First Name*"
                                         materialDesign:HintAssist.IsFloating="True"/>

                                <!-- Last Name -->
                                <TextBox x:Name="LastName"
                                         Grid.Row="1"
                                         Margin="5"
                                         FontSize="12"
                                         materialDesign:HintAssist.Hint="Last Name*"
                                         materialDesign:HintAssist.IsFloating="True"/>
                                
                                <!-- Confirm Button -->
                                <Button x:Name="AddNewContributor"
                                        Grid.Row="2"
                                        Margin="5"
                                        HorizontalAlignment="Center"
                                        Content="Add"/>
                            </Grid>

                            <!-- All Contributors List -->
                            <ListView x:Name="allContributorsListView"
                                      Grid.Row="1"
                                      ItemsSource="{Binding AllContributors}"
                                      Visibility="{Binding IsAllContributorListVisible,
                                                   Mode=TwoWay,
                                                   Converter={StaticResource boolToVisibility}}">

                                <!-- Item Template -->
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <!-- Add Contributor -->
                                                <ColumnDefinition Width="Auto"/>
                                                <!-- Contributor Full Name -->
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <!-- Add Contributor Button -->
                                            <Button Grid.Column="0"
                                                    Background="Transparent"
                                                    BorderThickness="0"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Command="{Binding ElementName=allContributorsListView,
                                                              Path=DataContext.AddContributorCommand}"
                                                    CommandParameter="{Binding}">
                                                <materialDesign:PackIcon Kind="AddCircleOutline"
                                                                         Width="20"
                                                                         Height="20"
                                                                         Foreground="{Binding InitialColor}"/>
                                            </Button>

                                            <!-- Full Name -->
                                            <TextBlock Grid.Column="1"
                                                       Style="{StaticResource ContributorFullNameInList}"
                                                       Text="{Binding FullName}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>

                                <!-- Disable hover effect -->
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                                    <ContentPresenter />
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ListView.ItemContainerStyle>
                            </ListView>
                        </Grid>
                    </materialDesign:Card>
                    
                    <!-- Added Contributors List -->
                    <ListView x:Name="AddedContributorsList"
                              Grid.Row="1"
                              Margin="0 5 0 0"
                              ItemsSource="{Binding ProjectContributors}"
                              Visibility="{Binding IsAddedContributorListVisible,
                                           Mode=TwoWay,
                                           Converter={StaticResource boolToVisibility}}">
                        
                        <!-- Item Template -->
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="2"
                                      ToolTip="{Binding FullName}">
                                    <Ellipse Width="20" 
                                             Height="20" 
                                             Fill="{Binding InitialColor}"/>
                                    <TextBlock Text="{Binding Initials}"
                                               Style="{StaticResource InitialsStyle}"/>
                                </Grid>
                            </DataTemplate>
                        </ListView.ItemTemplate>

                        <!-- Item orientation -->
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Horizontal"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>

                        <!-- Disable hover effect -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <ContentPresenter />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                    
                </Grid>
                
            </Grid>

            <!-- Comments -->
            <Grid Grid.Row="1" Margin="10 0 10 10">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <!-- Header and expandable button row -->
                    <RowDefinition Height="Auto"/>
                    <!-- Separator Row -->
                    <RowDefinition Height="Auto"/>
                    <!-- Body -->
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--  Header and expandable button -->
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <!-- Header row -->
                        <ColumnDefinition Width="*"/>
                        <!-- Expandalbe button row -->
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Header -->
                    <TextBlock Text="Comments" 
                               Grid.Column="0"
                               Style="{StaticResource Headers}"/>

                    <!-- Expandable button -->
                    <Button x:Name="ExpandCommentPanel"
                            Grid.Column="1"
                            Style="{StaticResource ExpandButton}"
                            ToolTip="Expand Comment View">
                        <materialDesign:PackIcon Kind="CircleExpand"/>
                    </Button>
                </Grid>

                <!-- Separates Header and body -->
                <Separator Grid.Row="1" 
                           Background="{StaticResource AccentBrush}"
                           Margin="0 5 0 5"/>
                
                <!-- Comment Body -->
                <Grid Grid.Row="2"
                      Visibility="{Binding IsCommentPanelVisible,
                                   Converter={StaticResource boolToVisibility}}">

                    <Grid.RowDefinitions>
                      
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Show 'Add Comment' panel -->
                    <Button x:Name="ShowAddNotePanel"
                            Grid.Row="0"
                            Content="Add Comment"/>
                    
                    <!-- New Comment Panel -->
                    <materialDesign:Card Grid.Row="1"
                                         Margin="10"
                                         Visibility="{Binding IsAddCommentPanelVisible,
                                                      Converter={StaticResource boolToVisibility}}">

                        <Grid>
                            
                            <Grid.RowDefinitions>
                                <!-- Comment Header -->
                                <RowDefinition Height="Auto"/>
                                <!-- Comment Content -->
                                <RowDefinition Height="Auto"/>
                                <!-- Submit button -->
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Comment Header -->
                            <TextBox Grid.Row="0"
                                     Text="{Binding CommentHeader,
                                            Mode=TwoWay}"
                                     materialDesign:HintAssist.Hint="Header"
                                     materialDesign:HintAssist.IsFloating="True"
                                     TextWrapping="Wrap"
                                     TextAlignment="Justify"/>

                            <!-- Comment Content -->
                            <TextBox Grid.Row="1"
                                     Text="{Binding CommentContent,
                                            Mode=TwoWay}"
                                     materialDesign:HintAssist.Hint="Comment*"
                                     materialDesign:HintAssist.IsFloating="True"
                                     TextWrapping="Wrap"
                                     TextAlignment="Justify"/>
                            
                            <!-- Add Comment -->
                            <Button x:Name="AddComment"
                                    Grid.Row="2"
                                    Margin="10"
                                    ToolTip="Add new comment"
                                    Content="Add"/>

                        </Grid>
                    </materialDesign:Card>
                    
                    <!-- Comment List View -->
                    <ListView x:Name="noteListView"
                              Grid.Row="1"
                              Margin="0 5 0 0"
                              HorizontalContentAlignment="Stretch"
                              ItemsSource="{Binding Notes}"
                              Style="{StaticResource ListView}">
                        
                        <!-- Item Template -->
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <materialDesign:Card
                                    Tag="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                          AncestorType={x:Type UserControl}}}">
                                    
                                    <!-- Context menu -->
                                    <materialDesign:Card.ContextMenu>
                                        <ContextMenu>

                                            <!-- Edit -->
                                            <MenuItem Header="Edit"
                                                      Command="{Binding 
                                                                Path=PlacementTarget.Tag.DataContext.EditCommentCommand,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}"/>

                                            <!-- Expand -->
                                            <MenuItem Header="Expand"
                                                      Command="{Binding 
                                                                Path=PlacementTarget.Tag.DataContext.ExpandCommentCommand,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}"/>

                                            <!-- Delete -->
                                            <MenuItem Header="Delete"
                                                      Command="{Binding 
                                                                Path=PlacementTarget.Tag.DataContext.DeleteCommentCommand,
                                                                RelativeSource={RelativeSource Mode=FindAncestor,
                                                                AncestorType=ContextMenu}}"
                                                      CommandParameter="{Binding}"/>
                                        </ContextMenu>
                                    </materialDesign:Card.ContextMenu>
                                    
                                    <!-- Input Bindings -->
                                    <materialDesign:Card.InputBindings>
                                        
                                        <!-- Left double click -->
                                        <MouseBinding Gesture="LeftDoubleClick"
                                                      Command="{Binding ElementName=noteListView,
                                                                Path=DataContext.ExpandCommentCommand}"
                                                      CommandParameter="{Binding}"/>
                                        
                                    </materialDesign:Card.InputBindings>

                                    <!-- Body -->
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <!-- Date -->
                                            <RowDefinition Height="Auto"/>
                                            
                                            <!-- Separator -->
                                            <RowDefinition Height="Auto"/>
                                            
                                            <!-- Content -->
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <!-- Submition Date -->
                                        <TextBlock Grid.Row="0"
                                                   Text="{Binding SubmitionDate, 
                                                          Converter={local:DateToStringConverter}}" 
                                                   Style="{StaticResource CommentDate}"/>

                                        <!-- Separates Date from content -->
                                        <Separator Grid.Row="1"
                                                   Background="{StaticResource AccentBrush}"
                                                   Margin="5"/>

                                        <!-- Content -->
                                        <TextBlock Grid.Row="2"
                                                   Text="{Binding Content}"
                                                   Style="{StaticResource CommentContent}"/>
                                    </Grid>
                                    
                                </materialDesign:Card>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                        
                    </ListView>
                </Grid>
                
            </Grid>
        </Grid>

        
        <!-- Progress -->
        <Grid Grid.Row="2" Grid.ColumnSpan="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Progress text -->
            <TextBlock 
                Text="{Binding Progress, StringFormat=' {0}%'}" 
                       Foreground="Gray" HorizontalAlignment="Center" VerticalAlignment="Center"/>

            <!-- Progress bar -->
            <ProgressBar Value="{Binding Progress}" Grid.Row="1"
                         Background="#F2F2F2" BorderThickness="0">
                <ProgressBar.Foreground>
                    <LinearGradientBrush EndPoint="1,0" StartPoint="0.0, 0">
                        <GradientStop Color="#90caf9" Offset="0"/>
                        <GradientStop Color="#1565c0" Offset="1"/>
                    </LinearGradientBrush>
                </ProgressBar.Foreground>
            </ProgressBar>

           
        </Grid>

    </Grid>
</UserControl>
